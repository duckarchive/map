{"version":3,"file":"index.js","sources":["../GeoDuckMap/Markers.tsx","../GeoDuckMap/LocationMarker.tsx","../GeoDuckMap/useStopPropagation.tsx","../GeoDuckMap/MapLocationSearch.tsx","../GeoDuckMap/useMapData.ts","../GeoDuckMap/Tooltip.tsx","../GeoDuckMap/YearSelect.tsx","../GeoDuckMap/HistoricalLayers.tsx","../GeoDuckMap/UkraineLayer.tsx","../GeoDuckMap/index.tsx"],"sourcesContent":["import L from \"leaflet\";\n\nconst pinIcon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 384 512\"><path stroke=\"none\" d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst christChurchIcon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 384 512\"><path stroke=\"none\" d=\"M352 128h-96V32c0-17.67-14.33-32-32-32h-64c-17.67 0-32 14.33-32 32v96H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h96v224c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V256h96c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst jewChurchIcon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\"><path stroke=\"none\" d=\"M8.433 6H3l-.114.006a1 1 0 0 0-.743 1.508L4.833 12l-2.69 4.486-.054.1A1 1 0 0 0 3 18h5.434l2.709 4.514.074.108a1 1 0 0 0 1.64-.108L15.565 18H21l.114-.006a1 1 0 0 0 .743-1.508L19.166 12l2.691-4.486.054-.1A1 1 0 0 0 21 6h-5.434l-2.709-4.514a1 1 0 0 0-1.714 0L8.433 6z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst crimeIcon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"none\" d=\"M0 0h24v24H0z\"/><path stroke=\"none\" d=\"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm2.5 11.59.9 3.88-3.4-2.05-3.4 2.05.9-3.87-3-2.59 3.96-.34L12 6.02l1.54 3.64 3.96.34-3 2.59z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst govIcon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\"><path stroke=\"none\" d=\"m243.4 2.6-224 96c-14 6-21.8 21-18.7 35.8S16.8 160 32 160v8c0 13.3 10.7 24 24 24h400c13.3 0 24-10.7 24-24v-8c15.2 0 28.3-10.7 31.3-25.6s-4.8-29.9-18.7-35.8l-224-96c-8-3.4-17.2-3.4-25.2 0zM128 224H64v196.3c-.6.3-1.2.7-1.8 1.1l-48 32c-11.7 7.8-17 22.4-12.9 35.9S17.9 512 32 512h448c14.1 0 26.5-9.2 30.6-22.7s-1.1-28.1-12.9-35.9l-48-32c-.6-.4-1.2-.7-1.8-1.1L448 224h-64v192h-40V224h-64v192h-48V224h-64v192h-40V224zM256 64a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst gov2Icon = L.divIcon({\n  html: `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 448 512\"><path stroke=\"none\" d=\"M436 480h-20V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v456H12c-6.627 0-12 5.373-12 12v20h448v-20c0-6.627-5.373-12-12-12zM128 76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76zm0 96c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40zm52 148h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40c0 6.627-5.373 12-12 12zm76 160h-64v-84c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v84zm64-172c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12v-40c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40zm0-96c0 6.627-5.373 12-12 12h-40c-6.627 0-12-5.373-12-12V76c0-6.627 5.373-12 12-12h40c6.627 0 12 5.373 12 12v40z\"/></svg>`,\n  className: \"io5-icon\",\n  iconSize: [20, 20],\n  iconAnchor: [10, 30],\n});\n\nconst icons: Record<string, L.DivIcon> = {\n  pinIcon,\n  christChurchIcon,\n  jewChurchIcon,\n  crimeIcon,\n  govIcon,\n  gov2Icon,\n};\n\nexport default icons;\n","import { Marker, Circle, useMapEvents, useMap, Tooltip } from \"react-leaflet\";\nimport React, { useEffect } from \"react\";\nimport icons from \"./Markers\";\n\nexport type MarkerValue = [number, number, number?, string?, string?];\n\ninterface LocationMarkerProps {\n  value: MarkerValue;\n  onChange?: (position: MarkerValue) => void;\n}\n\nconst StaticLocationMarker: React.FC<Pick<LocationMarkerProps, \"value\">> = ({\n  value,\n}) => {\n  if (!value) return null;\n\n  const markerIcon = icons[value[4] || \"pinIcon\"];\n  const latLng: [number, number] = [value[0], value[1]];\n\n  return (\n    <>\n      <Marker position={latLng} icon={markerIcon}>\n        {value[3] && <Tooltip direction=\"top\" offset={[0, -30]}>{value[3]}</Tooltip>}\n      </Marker>\n      {value[2] && value[2] > 0 && (\n        <Circle\n          center={latLng}\n          radius={value[2]}\n          pathOptions={{\n            color: \"currentColor\",\n            fillColor: \"currentColor\",\n            fillOpacity: 0.2,\n            weight: 0,\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nconst DynamicLocationMarker: React.FC<\n  Pick<LocationMarkerProps, \"value\" | \"onChange\">\n> = ({ value, onChange }) => {\n  const map = useMap();\n\n  useMapEvents({\n    click(e) {\n      if (!e.latlng) return;\n      const { lat, lng } = e.latlng;\n\n      onChange?.([lat, lng, value[2] || 0]);\n    },\n  });\n\n  useEffect(() => {\n    const handleWheel = (e: WheelEvent) => {\n      if (e.ctrlKey) {\n        // Prevent default behavior and stop propagation\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n\n        const delta = e.deltaY;\n        const step = 100; // 100m step\n        const minRadius = 100;\n        const maxRadius = 10000;\n\n        let newRadius = value[2] || 0;\n        if (delta < 0) {\n          // Scroll up - increase radius\n          newRadius = Math.min((value[2] || 0) + step, maxRadius);\n        } else {\n          // Scroll down - decrease radius\n          newRadius = Math.max((value[2] || 0) - step, minRadius);\n        }\n\n        if (newRadius !== value[2] || 0) {\n          onChange?.([value[0], value[1], newRadius]);\n        }\n      }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === \"Control\") {\n        // Disable scroll zoom when Ctrl is pressed\n        map.scrollWheelZoom.disable();\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === \"Control\") {\n        // Re-enable scroll zoom when Ctrl is released\n        map.scrollWheelZoom.enable();\n      }\n    };\n\n    const mapContainer = map.getContainer();\n\n    // Add event listeners\n    mapContainer.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n      capture: true,\n    });\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n\n    return () => {\n      mapContainer.removeEventListener(\"wheel\", handleWheel, { capture: true });\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"keyup\", handleKeyUp);\n      // Ensure scroll zoom is re-enabled on cleanup\n      map.scrollWheelZoom.enable();\n    };\n  }, [map, value, onChange]);\n\n  if (!value) return null;\n\n  const latLng: [number, number] = [value[0], value[1]];\n\n  return (\n    <>\n      <Marker position={latLng} icon={icons[\"pinIcon\"]} />\n      {value[2] && value[2] > 0 && (\n        <Circle\n          center={latLng}\n          radius={value[2]}\n          pathOptions={{\n            color: \"currentColor\",\n            fillColor: \"currentColor\",\n            fillOpacity: 0.2,\n            weight: 0,\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nconst LocationMarker: React.FC<LocationMarkerProps> = ({ value, onChange }) => {\n  const isStatic = !onChange;\n\n  return isStatic ? (\n    <StaticLocationMarker value={value} />\n  ) : (\n    <DynamicLocationMarker value={value} onChange={onChange} />\n  );\n};\n\nexport default LocationMarker;\n","import { useEffect, useRef } from \"react\";\nimport { DomEvent } from \"leaflet\";\n\nconst useStopPropagation = () => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!elementRef.current) return;\n    DomEvent.disableClickPropagation(elementRef.current);\n  }, [elementRef.current]);\n\n  return elementRef;\n};\n\nexport default useStopPropagation;\n","import { useState, useCallback, memo, useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport { OpenStreetMapProvider } from \"leaflet-geosearch\";\nimport { Autocomplete, AutocompleteItem } from \"@heroui/autocomplete\";\n\nimport useStopPropagation from \"./useStopPropagation\";\n\nconst SearchSVG = () => (\n  <svg\n    className=\"w-4 h-4 text-gray-400\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n  </svg>\n);\n\nconst PinSVG = () => (\n  <svg\n    className=\"w-4 h-4 text-gray-400 flex-shrink-0\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n    <path\n      d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n  </svg>\n);\n\ninterface SearchResult {\n  x: number; // longitude\n  y: number; // latitude\n  label: string;\n  bounds: [[number, number], [number, number]];\n  raw: any;\n}\n\ninterface MapLocationSearchProps {\n  onSelect?: (coord: [number, number]) => void;\n}\n\nconst MapLocationSearch = memo<MapLocationSearchProps>(({ onSelect }) => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const autocompleteRef = useStopPropagation();\n  const map = useMap();\n\n  const provider = new OpenStreetMapProvider({\n    params: {\n      \"accept-language\": \"ua\",\n      countrycodes: \"ua,pl,by,ru,ro,md,tr\",\n      limit: 5,\n      email: \"admin@duckarchive.com\",\n    },\n  });\n\n  const searchLocations = useCallback(\n    async (searchQuery: string) => {\n      if (!searchQuery.trim()) {\n        setResults([]);\n\n        return;\n      }\n\n      try {\n        const searchResults = await provider.search({ query: searchQuery });\n\n        setResults(searchResults as SearchResult[]);\n      } catch {\n        setResults([]);\n      }\n    },\n    [provider],\n  );\n\n  // Debounce search\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      searchLocations(query);\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [query]);\n\n  const handleLocationSelect = (result: SearchResult) => {\n    setQuery(result.label);\n\n    // Pan map to selected location\n    map.setView([result.y, result.x], 15);\n\n    // Dispatch custom event for other components to listen to\n    map.fire(\"geosearch/showlocation\", {\n      location: result,\n      marker: null,\n    });\n\n    onSelect?.([result.y, result.x]);\n  };\n\n  const handleInputChange = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleSelect = (key: number | string | null) => {\n    if (key) {\n      const result = results[key as number];\n\n      if (result) {\n        handleLocationSelect(result);\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={autocompleteRef} // Prevents click events from propagating to the map\n      className=\"absolute leaflet-top leaflet-left\"\n    >\n      <Autocomplete\n        aria-label=\"Пошук за сучасною назвою\"\n        className=\"leaflet-control w-auto bg-background rounded-xl shadow text-foreground\"\n        defaultItems={results}\n        inputValue={query}\n        listboxProps={{\n          emptyContent: \"Нічого не знайдено. Уточніть свій запит.\",\n        }}\n        placeholder=\"Пошук за сучасною назвою\"\n        startContent={<SearchSVG />}\n        variant=\"bordered\"\n        onClick={(e) => e.stopPropagation()}\n        onInputChange={handleInputChange}\n        onMouseDown={(e) => e.stopPropagation()}\n        onSelectionChange={handleSelect}\n      >\n        {(result) => (\n          <AutocompleteItem\n            key={results.indexOf(result)}\n            startContent={<PinSVG />}\n            textValue={result.label}\n          >\n            {result.label}\n          </AutocompleteItem>\n        )}\n      </Autocomplete>\n    </div>\n  );\n});\n\nMapLocationSearch.displayName = \"MapLocationSearch\";\n\nexport default MapLocationSearch;\n","import useSWR from \"swr\";\nimport { useMemo, useState } from \"react\";\n\nconst BASE_URL =\n  \"https://raw.githubusercontent.com/duckarchive/map/refs/heads/main/geojson\";\ninterface Collection {\n  year: number;\n  label?: string;\n  url: string;\n}\nexport const countryCollections: Collection[] = [\n  { year: 1500, url: `${BASE_URL}/countries/1500.geojson` },\n  { year: 1530, url: `${BASE_URL}/countries/1530.geojson` },\n  { year: 1600, url: `${BASE_URL}/countries/1600.geojson` },\n  { year: 1650, url: `${BASE_URL}/countries/1650.geojson` },\n  { year: 1700, url: `${BASE_URL}/countries/1700.geojson` },\n  { year: 1715, url: `${BASE_URL}/countries/1715.geojson` },\n  { year: 1783, url: `${BASE_URL}/countries/1783.geojson` },\n  { year: 1800, url: `${BASE_URL}/countries/1800.geojson` },\n  { year: 1815, url: `${BASE_URL}/countries/1815.geojson` },\n  { year: 1880, url: `${BASE_URL}/countries/1880.geojson` },\n  { year: 1900, url: `${BASE_URL}/countries/1900.geojson` },\n  { year: 1914, url: `${BASE_URL}/countries/1914.geojson` },\n  { year: 1920, url: `${BASE_URL}/countries/1920.geojson` },\n  { year: 1930, url: `${BASE_URL}/countries/1930.geojson` },\n  { year: 1938, url: `${BASE_URL}/countries/1938.geojson` },\n  { year: 1945, url: `${BASE_URL}/countries/1945.geojson` },\n  { year: 1960, url: `${BASE_URL}/countries/1960.geojson` },\n  { year: 1991, url: `${BASE_URL}/countries/1991.geojson` },\n];\n\nexport const stateCollections: Collection[] = [\n  { year: 1897, url: `${BASE_URL}/states/1897.geojson` },\n  { year: 1914, url: `${BASE_URL}/states/1914.geojson` },\n  { year: 1937, url: `${BASE_URL}/states/1937.geojson` },\n  { year: 1945, url: `${BASE_URL}/states/1945.geojson` },\n  { year: 1991, url: `${BASE_URL}/states/1991.geojson` },\n];\n\nconst getClosestCollectionUrl = (\n  targetYear: number,\n  collections: Collection[],\n  isStrict: boolean = false\n): string | null => {\n  if (isStrict) {\n    const exactMatch = collections.find(({ year }) => year === targetYear);\n    return exactMatch ? exactMatch.url : null;\n  }\n  const countryYears = collections\n    .filter(({ year }) => year > 0 && year <= targetYear)\n    .sort((a, b) => b.year - a.year);\n\n  return countryYears.length > 0 ? countryYears[0].url : null;\n};\n\n// Fetcher function for SWR\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\n\ninterface MapData {\n  countries: GeoJSON.FeatureCollection | null;\n  states: GeoJSON.FeatureCollection | null;\n  updateYear: (year: number) => void;\n  isLoading: boolean;\n}\n\nconst useMapData = (defaultYear: number): MapData => {\n  const [year, setYear] = useState(defaultYear);\n\n  const countriesUrl = getClosestCollectionUrl(year, countryCollections);\n  const {\n    data: countriesData,\n    isLoading: isLoadingCountries,\n    isValidating: isValidatingCountries,\n  } = useSWR<GeoJSON.FeatureCollection>(countriesUrl, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n  });\n\n  const statesUrl = getClosestCollectionUrl(year, stateCollections, true);\n  const {\n    data: statesData,\n    isLoading: isLoadingStates,\n    isValidating: isValidatingStates,\n  } = useSWR<GeoJSON.FeatureCollection>(statesUrl, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n  });\n\n  const countries = useMemo(\n    () => (countriesData || null),\n    [countriesData]\n  );\n\n  const states = useMemo(\n    () => (statesData || null),\n    [statesData]\n  );\n\n  const updateYear = (year: number) => {\n    setYear(year);\n  };\n\n  return {\n    countries,\n    states,\n    updateYear,\n    isLoading:\n      isLoadingCountries ||\n      isLoadingStates ||\n      isValidatingCountries ||\n      isValidatingStates,\n  };\n};\n\nexport default useMapData;\n","import { Card, CardBody } from \"@heroui/card\";\nimport { forwardRef } from \"react\";\n\ninterface MapTooltipProps {\n  level1?: string;\n  level2?: string;\n  level3?: string;\n}\n\nconst MapTooltip: React.FC<MapTooltipProps> = ({ level1, level2, level3 }) => {\n  return (\n    <div className=\"absolute leaflet-bottom leaflet-left\">\n      <Card className=\"leaflet-control max-w-sm pointer-events-none rounded-xl\">\n        <CardBody className=\"py-2\">\n          <div className=\"flex flex-col gap-0\">\n            {level3 && <p className=\"text-large\">{level3}</p>}\n            {level2 && <p className=\"text-small text-default-500\">{level2}</p>}\n            {level1 && <p className=\"text-small text-default-500\">{level1}</p>}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default MapTooltip;\n","import { Button } from \"@heroui/button\";\nimport { Input } from \"@heroui/input\";\nimport React, { useState } from \"react\";\nimport useStopPropagation from \"./useStopPropagation\";\n\n// Year presets\nconst YEAR_PRESETS = [\n  { value: 1897, label: \"Російська Імперія\" },\n  { value: 1914, label: \"WWI\" },\n  { value: 1937, label: \"Перед WWII\" },\n  { value: 1945, label: \"Після WWII\" },\n  { value: 1991, label: \"Незалежність\" },\n];\n\nconst validateYear = (yearStr: string): boolean => {\n  const yearNum = parseInt(yearStr, 10);\n\n  return /^\\d{4}$/.test(yearStr) && yearNum >= 1500 && yearNum <= 1991;\n};\n\ninterface YearSelectProps {\n  value: number;\n  onChange: (year: number) => void;\n}\n\nconst YearSelect: React.FC<YearSelectProps> = (\n  ({ value, onChange }) => {\n    const [yearInput, setYearInput] = useState(value.toString());\n    const [showPresets, setShowPresets] = useState(false);\n    const [isInvalid, setIsInvalid] = useState(false);\n    const yearSelectRef = useStopPropagation();\n\n    const handleYearInputChange = (value: string) => {\n      // Only allow digits and limit to 4 characters\n      const numericValue = value.replace(/\\D/g, \"\").slice(0, 4);\n\n      setYearInput(numericValue);\n\n      if (numericValue.length === 4) {\n        const isValid = validateYear(numericValue);\n\n        setIsInvalid(!isValid);\n\n        if (isValid) {\n          onChange(parseInt(numericValue, 10));\n        }\n      } else {\n        setIsInvalid(false);\n      }\n    };\n\n    const handlePresetSelect = (presetYear: number) => {\n      setYearInput(presetYear.toString());\n      onChange(presetYear);\n      setShowPresets(false);\n      setIsInvalid(false);\n    };\n\n    const handleInputFocus = () => {\n      setShowPresets(true);\n    };\n\n    const handleInputBlur = () => {\n      // Delay hiding presets to allow clicking on them\n      setTimeout(() => setShowPresets(false), 150);\n    };\n\n    return (\n      <div ref={yearSelectRef} className=\"absolute leaflet-top leaflet-right\">\n        <div className=\"leaflet-control bg-background rounded-xl shadow\">\n          <Input\n            classNames={{\n              inputWrapper: \"bg-background relative\",\n              input: \"text-sm text-foreground\",\n            }}\n            errorMessage={isInvalid ? \"Введіть рік від 1600 до 2025\" : \"\"}\n            isInvalid={isInvalid}\n            placeholder=\"1897\"\n            type=\"text\"\n            value={yearInput}\n            variant=\"bordered\"\n            onBlur={handleInputBlur}\n            onFocus={handleInputFocus}\n            onValueChange={handleYearInputChange}\n          />\n\n          {showPresets && (\n            <div className=\"flex flex-col gap-1 p-2\">\n              {YEAR_PRESETS.map((preset) => (\n                <Button\n                  key={preset.value}\n                  className=\"text-xs justify-start\"\n                  color=\"default\"\n                  size=\"sm\"\n                  variant={value === preset.value ? \"flat\" : \"bordered\"}\n                  onPress={() => handlePresetSelect(preset.value)}\n                >\n                  {preset.value} - {preset.label}\n                </Button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default YearSelect;\n","import { Layer } from \"leaflet\";\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { GeoJSON, GeoJSONProps } from \"react-leaflet\";\nimport { Spinner } from \"@heroui/spinner\";\n\nimport useMapData from \"./useMapData\";\nimport MapTooltip from \"./Tooltip\";\nimport YearSelect from \"./YearSelect\";\nimport { Feature } from \"geojson\";\n\nconst colorPalette = [\n  \"green\",\n  \"darkblue\",\n  \"purple\",\n  \"orange\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n];\n\nconst getCountryFeatureColor = (feature: Feature) => {\n  const id = (feature.properties?.admin_level_1_ID || feature.id || 0);\n  if (id === 22) {\n    // Special case for Ukraine\n    return \"gold\";\n  }\n  const colorIndex = id % colorPalette.length;\n  return colorPalette[colorIndex];\n};\n\nconst getStyle = (feature: Feature | undefined, isHighlight: boolean, weight = 1) => {\n  const countryColor = feature ? getCountryFeatureColor(feature) : \"gray\";\n  return {\n    color: countryColor,\n    fillColor: countryColor,\n    weight,\n    opacity: isHighlight ? 1 : 0.5,\n    fillOpacity: isHighlight ? 0.1 : 0,\n    interactive: true,\n  };\n}\n\nconst CountriesLayer = memo(\n  forwardRef<L.GeoJSON, GeoJSONProps>(({ data, onEachFeature }, ref) =>\n    data ? (\n      <GeoJSON\n        ref={ref}\n        data={data}\n        style={(feature) => getStyle(feature, false, 0)}\n        onEachFeature={onEachFeature}\n      />\n    ) : null\n  )\n);\n\nCountriesLayer.displayName = \"CountriesLayer\";\n\nconst StatesLayer = memo(({ data, onEachFeature }: GeoJSONProps) =>\n  data ? (\n    <GeoJSON\n      data={data}\n      style={(feature) => getStyle(feature, false, 2)}\n      onEachFeature={onEachFeature}\n    />\n  ) : null\n);\n\nStatesLayer.displayName = \"StatesLayer\";\n\ninterface HistoricalLayersProps {\n  year: number;\n  onYearChange?: (year: number) => void;\n}\n\nconst HistoricalLayers: React.FC<HistoricalLayersProps> = ({ year, onYearChange }) => {\n  const [hoveredCountryFeature, setHoveredCountryFeature] = useState<any>(null);\n  const [hoveredStateFeature, setHoveredStateFeature] = useState<any>(null);\n  const { countries, states, updateYear, isLoading } = useMapData(year);\n\n  useEffect(() => {\n    updateYear(year);\n    setHoveredCountryFeature(null);\n    setHoveredStateFeature(null);\n  }, [year]);\n\n  const onEachCountryFeature = useCallback(\n    (feature: GeoJSON.Feature, layer: Layer) => {\n      layer.on({\n        mouseover: (e) => {\n          setHoveredCountryFeature(feature);\n          e.target.setStyle(getStyle(feature, false, 1));\n        },\n        mouseout: (e) => {\n          setHoveredCountryFeature(null);\n          e.target.setStyle(getStyle(feature, false, 0));\n        },\n      });\n    },\n    []\n  );\n\n  const onEachStateFeature = useCallback(\n    (feature: GeoJSON.Feature, layer: Layer) => {\n      layer.on({\n        mouseover: (e) => {\n          setHoveredStateFeature(feature);\n          const countryFeature = countries?.features.find(\n            (f) => f.id?.toString() === feature.properties?.admin_level_1_ID.toString()\n          );\n          if (countryFeature) {\n            setHoveredCountryFeature(countryFeature);\n          }\n          e.target.setStyle(getStyle(feature, true, 4));\n        },\n        mouseout: (e) => {\n          setHoveredStateFeature(null);\n          e.target.setStyle(getStyle(feature, false, 2));\n        }\n      });\n    },\n    [countries]\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"absolute z-[1001] top-0 left-0 w-full h-full flex items-center justify-center backdrop-blur-sm bg-white/50\">\n          <Spinner />\n        </div>\n      ) : (\n        <>\n          {countries && (\n            <CountriesLayer\n              data={countries}\n              onEachFeature={onEachCountryFeature}\n            />\n          )}\n\n          {states && (\n            <StatesLayer data={states} onEachFeature={onEachStateFeature} />\n          )}\n        </>\n      )}\n      {\n        onYearChange && (\n          <YearSelect\n            value={year}\n            onChange={onYearChange}\n          />\n        )\n      }\n      {/* Fixed tooltip at bottom left corner */}\n      {(hoveredCountryFeature || hoveredStateFeature) && (\n        <MapTooltip\n          level1={hoveredCountryFeature?.properties?.admin_level_1}\n          level2={hoveredStateFeature?.properties?.admin_level_2}\n          level3={hoveredStateFeature?.properties?.admin_level_3}\n        />\n      )}\n    </>\n  );\n};\n\nexport default HistoricalLayers;\n","import { GeoJSON } from \"react-leaflet\";\nimport useSWR from \"swr\";\n\nconst UKRAINE_URL =\n  \"https://raw.githubusercontent.com/duckarchive/map/refs/heads/main/geojson/ukraine.geojson\";\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\n\nconst UkraineLayer: React.FC = () => {\n  const { data } = useSWR<GeoJSON.FeatureCollection>(\n    UKRAINE_URL,\n    fetcher,\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n      refreshWhenHidden: false,\n      refreshWhenOffline: false,\n    },\n  );\n\n  return (\n    data && (\n      <GeoJSON\n        data={data}\n        style={{\n          color: \"gray\",\n          weight: 4,\n          fillColor: \"transparent\",\n          opacity: 0.4,\n          interactive: false,\n        }}\n      />\n    )\n  );\n};\n\nexport default UkraineLayer;\n","import \"leaflet-geosearch/assets/css/leaflet.css\";\n\nimport React from \"react\";\nimport {\n  MapContainer,\n  MapContainerProps,\n  TileLayer,\n  TileLayerProps,\n} from \"react-leaflet\";\nimport type { Map } from \"leaflet\";\n\nimport LocationMarker, { MarkerValue } from \"./LocationMarker\";\nimport MapLocationSearch from \"./MapLocationSearch\";\n\nimport HistoricalLayers from \"./HistoricalLayers\";\nimport UkraineLayer from \"./UkraineLayer\";\n\nconst STATIC = {\n  zoomControl: false,\n  doubleClickZoom: false,\n  closePopupOnClick: false,\n  dragging: false,\n  zoomSnap: 0,\n  zoomDelta: 1,\n  trackResize: false,\n  touchZoom: false,\n  scrollWheelZoom: false,\n};\n\nconst DEFAULT = {\n  zoomControl: false,\n  scrollWheelZoom: true,\n};\n\nexport interface GeoDuckMapProps\n  extends MapContainerProps,\n    React.RefAttributes<Map> {\n  positions: MarkerValue[];\n  onPositionChange?: (pos: MarkerValue) => void;\n  tileLayerProps?: TileLayerProps;\n  year?: number;\n  onYearChange?: (year: number) => void;\n  hideLayers?: Partial<{\n    yearInput: boolean;\n    searchInput: boolean;\n    locationMarker: boolean;\n    historicalLayers: boolean;\n    ukraineLayer: boolean;\n  }>;\n}\n\nconst GeoDuckMap: React.FC<GeoDuckMapProps> = ({\n  positions,\n  onPositionChange,\n  tileLayerProps,\n  year = 1897,\n  onYearChange,\n  hideLayers,\n  ...mapContainerProps\n}) => (\n  <MapContainer\n    worldCopyJump\n    center={[49.0139, 31.2858]}\n    style={{ height: \"100%\", width: \"100%\" }}\n    zoom={6}\n    {...(onPositionChange ? DEFAULT : STATIC)}\n    {...mapContainerProps}\n  >\n    <TileLayer\n      className=\"grayscale\"\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      url={\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"}\n      {...tileLayerProps}\n    />\n    {!hideLayers?.ukraineLayer && <UkraineLayer />}\n    {!hideLayers?.searchInput && (\n      <MapLocationSearch onSelect={onPositionChange} />\n    )}\n    {!hideLayers?.historicalLayers && (\n      <HistoricalLayers year={year} onYearChange={onYearChange} />\n    )}\n    {!hideLayers?.locationMarker &&\n      (onPositionChange ? (\n        <LocationMarker value={positions[0]} onChange={onPositionChange} />\n      ) : (\n        positions.map((pos, idx) => (\n          <LocationMarker key={idx} value={pos} />\n        ))\n      ))}\n  </MapContainer>\n);\n\nexport default GeoDuckMap;\n"],"names":["pinIcon","L","christChurchIcon","jewChurchIcon","crimeIcon","govIcon","gov2Icon","icons","StaticLocationMarker","value","markerIcon","latLng","jsxs","Fragment","jsx","Marker","Tooltip","Circle","DynamicLocationMarker","onChange","map","useMap","useMapEvents","e","lat","lng","useEffect","handleWheel","delta","step","minRadius","maxRadius","newRadius","handleKeyDown","handleKeyUp","mapContainer","LocationMarker","useStopPropagation","elementRef","useRef","DomEvent","SearchSVG","PinSVG","MapLocationSearch","memo","onSelect","query","setQuery","useState","results","setResults","autocompleteRef","provider","OpenStreetMapProvider","searchLocations","useCallback","searchQuery","searchResults","timer","handleLocationSelect","result","Autocomplete","key","AutocompleteItem","BASE_URL","countryCollections","stateCollections","getClosestCollectionUrl","targetYear","collections","isStrict","exactMatch","year","countryYears","a","b","fetcher","url","res","useMapData","defaultYear","setYear","countriesUrl","countriesData","isLoadingCountries","isValidatingCountries","useSWR","statesUrl","statesData","isLoadingStates","isValidatingStates","countries","useMemo","states","MapTooltip","level1","level2","level3","Card","CardBody","YEAR_PRESETS","validateYear","yearStr","yearNum","YearSelect","yearInput","setYearInput","showPresets","setShowPresets","isInvalid","setIsInvalid","yearSelectRef","handleYearInputChange","numericValue","isValid","handlePresetSelect","presetYear","Input","preset","Button","colorPalette","getCountryFeatureColor","feature","id","_a","colorIndex","getStyle","isHighlight","weight","countryColor","CountriesLayer","forwardRef","data","onEachFeature","ref","GeoJSON","StatesLayer","HistoricalLayers","onYearChange","hoveredCountryFeature","setHoveredCountryFeature","hoveredStateFeature","setHoveredStateFeature","updateYear","isLoading","onEachCountryFeature","layer","onEachStateFeature","countryFeature","f","_b","Spinner","_c","UKRAINE_URL","UkraineLayer","STATIC","DEFAULT","GeoDuckMap","positions","onPositionChange","tileLayerProps","hideLayers","mapContainerProps","MapContainer","TileLayer","pos","idx"],"mappings":"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"}