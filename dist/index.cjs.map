{"version":3,"file":"index.cjs","sources":["../GeoDuckMap/LocationMarker.tsx","../GeoDuckMap/useStopPropagation.tsx","../GeoDuckMap/MapLocationSearch.tsx","../GeoDuckMap/useMapData.ts","../GeoDuckMap/Tooltip.tsx","../GeoDuckMap/YearSelect.tsx","../GeoDuckMap/HistoricalLayers.tsx","../GeoDuckMap/UkraineLayer.tsx","../GeoDuckMap/index.tsx"],"sourcesContent":["import { Marker, Circle, useMapEvents, useMap } from \"react-leaflet\";\nimport React, { useEffect } from \"react\";\nimport L from \"leaflet\";\n\nconst markerSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" stroke=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\"><path fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\" d=\"M256 48c-79.5 0-144 61.39-144 137 0 87 96 224.87 131.25 272.49a15.77 15.77 0 0 0 25.5 0C304 409.89 400 272.07 400 185c0-75.61-64.5-137-144-137z\"/><circle cx=\"256\" cy=\"192\" r=\"48\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"32\"/></svg>`;\n\ninterface LocationMarkerProps {\n  value: [number, number];\n  onChange: (position: [number, number]) => void;\n  radius?: number;\n  onRadiusChange?: (radius: number) => void;\n}\n\nconst LocationMarker: React.FC<LocationMarkerProps> = ({\n  value,\n  onChange,\n  radius,\n  onRadiusChange,\n}) => {\n  const map = useMap();\n  \n  useMapEvents({\n    click(e) {\n      if (!e.latlng) return;\n      const { lat, lng } = e.latlng;\n\n      onChange([lat, lng]);\n    },\n  });\n\n  useEffect(() => {\n    if (!onRadiusChange || radius === undefined) return;\n\n    const handleWheel = (e: WheelEvent) => {\n      if (e.ctrlKey) {\n        // Prevent default behavior and stop propagation\n        e.preventDefault();\n        e.stopPropagation();\n        e.stopImmediatePropagation();\n        \n        const delta = e.deltaY;\n        const step = 100; // 100m step\n        const minRadius = 100;\n        const maxRadius = 10000;\n        \n        let newRadius = radius;\n        if (delta < 0) {\n          // Scroll up - increase radius\n          newRadius = Math.min(radius + step, maxRadius);\n        } else {\n          // Scroll down - decrease radius\n          newRadius = Math.max(radius - step, minRadius);\n        }\n        \n        if (newRadius !== radius) {\n          onRadiusChange(newRadius);\n        }\n      }\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'Control') {\n        // Disable scroll zoom when Ctrl is pressed\n        map.scrollWheelZoom.disable();\n      }\n    };\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (e.key === 'Control') {\n        // Re-enable scroll zoom when Ctrl is released\n        map.scrollWheelZoom.enable();\n      }\n    };\n\n    const mapContainer = map.getContainer();\n    \n    // Add event listeners\n    mapContainer.addEventListener('wheel', handleWheel, { passive: false, capture: true });\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      mapContainer.removeEventListener('wheel', handleWheel, { capture: true });\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n      // Ensure scroll zoom is re-enabled on cleanup\n      map.scrollWheelZoom.enable();\n    };\n  }, [map, radius, onRadiusChange]);\n\n  const markerIcon = React.useMemo(() => {\n    return L.divIcon({\n      html: markerSVG,\n      className: \"io5-icon\",\n      iconSize: [40, 40],\n      iconAnchor: [20, 40],\n      popupAnchor: [0, -40],\n    });\n  }, []);\n\n  if (!value) return null;\n\n  return (\n    <>\n      <Marker position={value} icon={markerIcon} />\n      {radius && radius > 0 && (\n        <Circle\n          center={value}\n          radius={radius}\n          pathOptions={{\n            color: \"currentColor\",\n            fillColor: \"currentColor\",\n            fillOpacity: 0.2,\n            weight: 0,\n          }}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LocationMarker;\n","import { useEffect, useRef } from \"react\";\nimport { DomEvent } from \"leaflet\";\n\nconst useStopPropagation = () => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!elementRef.current) return;\n    DomEvent.disableClickPropagation(elementRef.current);\n  }, [elementRef.current]);\n\n  return elementRef;\n};\n\nexport default useStopPropagation;\n","import { useState, useCallback, memo, useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport { OpenStreetMapProvider } from \"leaflet-geosearch\";\nimport { Autocomplete, AutocompleteItem } from \"@heroui/autocomplete\";\n\nimport useStopPropagation from \"./useStopPropagation\";\n\nconst SearchSVG = () => (\n  <svg\n    className=\"w-4 h-4 text-gray-400\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n  </svg>\n);\n\nconst PinSVG = () => (\n  <svg\n    className=\"w-4 h-4 text-gray-400 flex-shrink-0\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    viewBox=\"0 0 24 24\"\n  >\n    <path\n      d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n    <path\n      d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n    />\n  </svg>\n);\n\ninterface SearchResult {\n  x: number; // longitude\n  y: number; // latitude\n  label: string;\n  bounds: [[number, number], [number, number]];\n  raw: any;\n}\n\nconst MapLocationSearch = memo(() => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult[]>([]);\n  const autocompleteRef = useStopPropagation();\n  const map = useMap();\n\n  const provider = new OpenStreetMapProvider({\n    params: {\n      \"accept-language\": \"ua\",\n      countrycodes: \"ua,pl,by,ru,ro,md,tr\",\n      limit: 5,\n      email: \"admin@duckarchive.com\",\n    },\n  });\n\n  const searchLocations = useCallback(\n    async (searchQuery: string) => {\n      if (!searchQuery.trim()) {\n        setResults([]);\n\n        return;\n      }\n\n      try {\n        const searchResults = await provider.search({ query: searchQuery });\n\n        setResults(searchResults as SearchResult[]);\n      } catch {\n        setResults([]);\n      }\n    },\n    [provider],\n  );\n\n  // Debounce search\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      searchLocations(query);\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [query]);\n\n  const handleLocationSelect = (result: SearchResult) => {\n    setQuery(result.label);\n\n    // Pan map to selected location\n    map.setView([result.y, result.x], 15);\n\n    // Dispatch custom event for other components to listen to\n    map.fire(\"geosearch/showlocation\", {\n      location: result,\n      marker: null,\n    });\n  };\n\n  const handleInputChange = (value: string) => {\n    setQuery(value);\n  };\n\n  const handleSelect = (key: number | string | null) => {\n    if (key) {\n      const result = results[key as number];\n\n      if (result) {\n        handleLocationSelect(result);\n      }\n    }\n  };\n\n  return (\n    <div\n      ref={autocompleteRef} // Prevents click events from propagating to the map\n      className=\"absolute leaflet-top leaflet-left\"\n    >\n      <Autocomplete\n        aria-label=\"Пошук за сучасною назвою\"\n        className=\"leaflet-control w-auto bg-white rounded-xl shadow text-gray-900\"\n        defaultItems={results}\n        inputValue={query}\n        listboxProps={{\n          emptyContent: \"Нічого не знайдено. Уточніть свій запит.\",\n        }}\n        placeholder=\"Пошук за сучасною назвою\"\n        startContent={<SearchSVG />}\n        variant=\"bordered\"\n        onClick={(e) => e.stopPropagation()}\n        onInputChange={handleInputChange}\n        onMouseDown={(e) => e.stopPropagation()}\n        onSelectionChange={handleSelect}\n      >\n        {(result) => (\n          <AutocompleteItem\n            key={results.indexOf(result)}\n            startContent={<PinSVG />}\n            textValue={result.label}\n          >\n            {result.label}\n          </AutocompleteItem>\n        )}\n      </Autocomplete>\n    </div>\n  );\n});\n\nMapLocationSearch.displayName = \"MapLocationSearch\";\n\nexport default MapLocationSearch;\n","import useSWR from \"swr\";\nimport { useMemo, useState } from \"react\";\n\nconst BASE_URL =\n  \"https://raw.githubusercontent.com/duckarchive/map/refs/heads/main/geojson\";\ninterface Collection {\n  year: number;\n  label?: string;\n  url: string;\n}\nexport const countryCollections: Collection[] = [\n  { year: 1500, url: `${BASE_URL}/countries/1500.geojson` },\n  { year: 1530, url: `${BASE_URL}/countries/1530.geojson` },\n  { year: 1600, url: `${BASE_URL}/countries/1600.geojson` },\n  { year: 1650, url: `${BASE_URL}/countries/1650.geojson` },\n  { year: 1700, url: `${BASE_URL}/countries/1700.geojson` },\n  { year: 1715, url: `${BASE_URL}/countries/1715.geojson` },\n  { year: 1783, url: `${BASE_URL}/countries/1783.geojson` },\n  { year: 1800, url: `${BASE_URL}/countries/1800.geojson` },\n  { year: 1815, url: `${BASE_URL}/countries/1815.geojson` },\n  { year: 1880, url: `${BASE_URL}/countries/1880.geojson` },\n  { year: 1900, url: `${BASE_URL}/countries/1900.geojson` },\n  { year: 1914, url: `${BASE_URL}/countries/1914.geojson` },\n  { year: 1920, url: `${BASE_URL}/countries/1920.geojson` },\n  { year: 1930, url: `${BASE_URL}/countries/1930.geojson` },\n  { year: 1938, url: `${BASE_URL}/countries/1938.geojson` },\n  { year: 1945, url: `${BASE_URL}/countries/1945.geojson` },\n  { year: 1960, url: `${BASE_URL}/countries/1960.geojson` },\n  { year: 1991, url: `${BASE_URL}/countries/1991.geojson` },\n];\n\nexport const stateCollections: Collection[] = [\n  { year: 1897, url: `${BASE_URL}/states/1897.geojson` },\n  { year: 1914, url: `${BASE_URL}/states/1914.geojson` },\n  { year: 1937, url: `${BASE_URL}/states/1937.geojson` },\n  { year: 1945, url: `${BASE_URL}/states/1945.geojson` },\n  { year: 1991, url: `${BASE_URL}/states/1991.geojson` },\n];\n\nconst getClosestCollectionUrl = (\n  targetYear: number,\n  collections: Collection[],\n  isStrict: boolean = false\n): string | null => {\n  if (isStrict) {\n    const exactMatch = collections.find(({ year }) => year === targetYear);\n    return exactMatch ? exactMatch.url : null;\n  }\n  const countryYears = collections\n    .filter(({ year }) => year > 0 && year <= targetYear)\n    .sort((a, b) => b.year - a.year);\n\n  return countryYears.length > 0 ? countryYears[0].url : null;\n};\n\n// Fetcher function for SWR\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\n\ninterface MapData {\n  countries: GeoJSON.FeatureCollection | null;\n  states: GeoJSON.FeatureCollection | null;\n  updateYear: (year: number) => void;\n  isLoading: boolean;\n}\n\nconst useMapData = (defaultYear: number): MapData => {\n  const [year, setYear] = useState(defaultYear);\n\n  const countriesUrl = getClosestCollectionUrl(year, countryCollections);\n  const {\n    data: countriesData,\n    isLoading: isLoadingCountries,\n    isValidating: isValidatingCountries,\n  } = useSWR<GeoJSON.FeatureCollection>(countriesUrl, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n  });\n\n  const statesUrl = getClosestCollectionUrl(year, stateCollections, true);\n  const {\n    data: statesData,\n    isLoading: isLoadingStates,\n    isValidating: isValidatingStates,\n  } = useSWR<GeoJSON.FeatureCollection>(statesUrl, fetcher, {\n    revalidateOnFocus: false,\n    revalidateOnReconnect: false,\n    refreshWhenHidden: false,\n    refreshWhenOffline: false,\n  });\n\n  const countries = useMemo(\n    () => (countriesData || null),\n    [countriesData]\n  );\n\n  const states = useMemo(\n    () => (statesData || null),\n    [statesData]\n  );\n\n  const updateYear = (year: number) => {\n    setYear(year);\n  };\n\n  return {\n    countries,\n    states,\n    updateYear,\n    isLoading:\n      isLoadingCountries ||\n      isLoadingStates ||\n      isValidatingCountries ||\n      isValidatingStates,\n  };\n};\n\nexport default useMapData;\n","import { Card, CardBody } from \"@heroui/card\";\nimport { forwardRef } from \"react\";\n\ninterface MapTooltipProps {\n  level1?: string;\n  level2?: string;\n  level3?: string;\n}\n\nconst MapTooltip: React.FC<MapTooltipProps> = ({ level1, level2, level3 }) => {\n  return (\n    <div className=\"absolute leaflet-bottom leaflet-left\">\n      <Card className=\"leaflet-control max-w-sm pointer-events-none rounded-xl\">\n        <CardBody className=\"py-2\">\n          <div className=\"flex flex-col gap-0\">\n            {level3 && <p className=\"text-large\">{level3}</p>}\n            {level2 && <p className=\"text-small text-default-500\">{level2}</p>}\n            {level1 && <p className=\"text-small text-default-500\">{level1}</p>}\n          </div>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default MapTooltip;\n","import { Button } from \"@heroui/button\";\nimport { Input } from \"@heroui/input\";\nimport React, { useState } from \"react\";\nimport useStopPropagation from \"./useStopPropagation\";\n\n// Year presets\nconst YEAR_PRESETS = [\n  { value: 1897, label: \"Російська Імперія\" },\n  { value: 1914, label: \"WWI\" },\n  { value: 1937, label: \"Перед WWII\" },\n  { value: 1945, label: \"Після WWII\" },\n  { value: 1991, label: \"Незалежність\" },\n];\n\nconst validateYear = (yearStr: string): boolean => {\n  const yearNum = parseInt(yearStr, 10);\n\n  return /^\\d{4}$/.test(yearStr) && yearNum >= 1500 && yearNum <= 1991;\n};\n\ninterface YearSelectProps {\n  value: number;\n  onChange: (year: number) => void;\n}\n\nconst YearSelect: React.FC<YearSelectProps> = (\n  ({ value, onChange }) => {\n    const [yearInput, setYearInput] = useState(value.toString());\n    const [showPresets, setShowPresets] = useState(false);\n    const [isInvalid, setIsInvalid] = useState(false);\n    const yearSelectRef = useStopPropagation();\n\n    const handleYearInputChange = (value: string) => {\n      // Only allow digits and limit to 4 characters\n      const numericValue = value.replace(/\\D/g, \"\").slice(0, 4);\n\n      setYearInput(numericValue);\n\n      if (numericValue.length === 4) {\n        const isValid = validateYear(numericValue);\n\n        setIsInvalid(!isValid);\n\n        if (isValid) {\n          onChange(parseInt(numericValue, 10));\n        }\n      } else {\n        setIsInvalid(false);\n      }\n    };\n\n    const handlePresetSelect = (presetYear: number) => {\n      setYearInput(presetYear.toString());\n      onChange(presetYear);\n      setShowPresets(false);\n      setIsInvalid(false);\n    };\n\n    const handleInputFocus = () => {\n      setShowPresets(true);\n    };\n\n    const handleInputBlur = () => {\n      // Delay hiding presets to allow clicking on them\n      setTimeout(() => setShowPresets(false), 150);\n    };\n\n    return (\n      <div ref={yearSelectRef} className=\"absolute leaflet-top leaflet-right\">\n        <div className=\"leaflet-control bg-white rounded-xl shadow\">\n          <Input\n            classNames={{\n              inputWrapper: \"bg-default-100 relative\",\n              input: \"text-sm text-gray-900\",\n            }}\n            errorMessage={isInvalid ? \"Введіть рік від 1600 до 2025\" : \"\"}\n            isInvalid={isInvalid}\n            placeholder=\"1897\"\n            type=\"text\"\n            value={yearInput}\n            variant=\"bordered\"\n            onBlur={handleInputBlur}\n            onFocus={handleInputFocus}\n            onValueChange={handleYearInputChange}\n          />\n\n          {showPresets && (\n            <div className=\"flex flex-col gap-1 p-2\">\n              {YEAR_PRESETS.map((preset) => (\n                <Button\n                  key={preset.value}\n                  className=\"text-xs justify-start\"\n                  color=\"default\"\n                  size=\"sm\"\n                  variant={value === preset.value ? \"flat\" : \"bordered\"}\n                  onPress={() => handlePresetSelect(preset.value)}\n                >\n                  {preset.value} - {preset.label}\n                </Button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default YearSelect;\n","import { Layer } from \"leaflet\";\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { GeoJSON, GeoJSONProps } from \"react-leaflet\";\nimport { Spinner } from \"@heroui/spinner\";\n\nimport useMapData from \"./useMapData\";\nimport MapTooltip from \"./Tooltip\";\nimport YearSelect from \"./YearSelect\";\nimport { Feature } from \"geojson\";\n\nconst colorPalette = [\n  \"green\",\n  \"darkblue\",\n  \"purple\",\n  \"orange\",\n  \"blue\",\n  \"red\",\n  \"yellow\",\n];\n\nconst getCountryFeatureColor = (feature: Feature) => {\n  const id = (feature.properties?.admin_level_1_ID || feature.id || 0);\n  if (id === 22) {\n    // Special case for Ukraine\n    return \"gold\";\n  }\n  const colorIndex = id % colorPalette.length;\n  return colorPalette[colorIndex];\n};\n\nconst getStyle = (feature: Feature | undefined, isHighlight: boolean, weight = 1) => {\n  const countryColor = feature ? getCountryFeatureColor(feature) : \"gray\";\n  return {\n    color: countryColor,\n    fillColor: countryColor,\n    weight,\n    opacity: isHighlight ? 1 : 0.5,\n    fillOpacity: isHighlight ? 0.1 : 0,\n    interactive: true,\n  };\n}\n\nconst CountriesLayer = memo(\n  forwardRef<L.GeoJSON, GeoJSONProps>(({ data, onEachFeature }, ref) =>\n    data ? (\n      <GeoJSON\n        ref={ref}\n        data={data}\n        style={(feature) => getStyle(feature, false, 0)}\n        onEachFeature={onEachFeature}\n      />\n    ) : null\n  )\n);\n\nCountriesLayer.displayName = \"CountriesLayer\";\n\nconst StatesLayer = memo(({ data, onEachFeature }: GeoJSONProps) =>\n  data ? (\n    <GeoJSON\n      data={data}\n      style={(feature) => getStyle(feature, false, 2)}\n      onEachFeature={onEachFeature}\n    />\n  ) : null\n);\n\nStatesLayer.displayName = \"StatesLayer\";\n\ninterface HistoricalLayersProps {\n  year: number;\n  onYearChange?: (year: number) => void;\n}\n\nconst HistoricalLayers: React.FC<HistoricalLayersProps> = ({ year, onYearChange }) => {\n  const [hoveredCountryFeature, setHoveredCountryFeature] = useState<any>(null);\n  const [hoveredStateFeature, setHoveredStateFeature] = useState<any>(null);\n  const { countries, states, updateYear, isLoading } = useMapData(year);\n\n  useEffect(() => {\n    updateYear(year);\n    setHoveredCountryFeature(null);\n    setHoveredStateFeature(null);\n  }, [year]);\n\n  const onEachCountryFeature = useCallback(\n    (feature: GeoJSON.Feature, layer: Layer) => {\n      layer.on({\n        mouseover: (e) => {\n          setHoveredCountryFeature(feature);\n          e.target.setStyle(getStyle(feature, false, 1));\n        },\n        mouseout: (e) => {\n          setHoveredCountryFeature(null);\n          e.target.setStyle(getStyle(feature, false, 0));\n        },\n      });\n    },\n    []\n  );\n\n  const onEachStateFeature = useCallback(\n    (feature: GeoJSON.Feature, layer: Layer) => {\n      layer.on({\n        mouseover: (e) => {\n          setHoveredStateFeature(feature);\n          const countryFeature = countries?.features.find(\n            (f) => f.id?.toString() === feature.properties?.admin_level_1_ID.toString()\n          );\n          if (countryFeature) {\n            setHoveredCountryFeature(countryFeature);\n          }\n          e.target.setStyle(getStyle(feature, true, 4));\n        },\n        mouseout: (e) => {\n          setHoveredStateFeature(null);\n          e.target.setStyle(getStyle(feature, false, 2));\n        }\n      });\n    },\n    [countries]\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"absolute z-[1001] top-0 left-0 w-full h-full flex items-center justify-center backdrop-blur-sm bg-white/50\">\n          <Spinner />\n        </div>\n      ) : (\n        <>\n          {countries && (\n            <CountriesLayer\n              data={countries}\n              onEachFeature={onEachCountryFeature}\n            />\n          )}\n\n          {states && (\n            <StatesLayer data={states} onEachFeature={onEachStateFeature} />\n          )}\n        </>\n      )}\n      {\n        onYearChange && (\n          <YearSelect\n            value={year}\n            onChange={onYearChange}\n          />\n        )\n      }\n      {/* Fixed tooltip at bottom left corner */}\n      {(hoveredCountryFeature || hoveredStateFeature) && (\n        <MapTooltip\n          level1={hoveredCountryFeature?.properties?.admin_level_1}\n          level2={hoveredStateFeature?.properties?.admin_level_2}\n          level3={hoveredStateFeature?.properties?.admin_level_3}\n        />\n      )}\n    </>\n  );\n};\n\nexport default HistoricalLayers;\n","import { GeoJSON } from \"react-leaflet\";\nimport useSWR from \"swr\";\n\nconst UKRAINE_URL =\n  \"https://raw.githubusercontent.com/duckarchive/map/refs/heads/main/geojson/ukraine.geojson\";\nconst fetcher = (url: string) => fetch(url).then((res) => res.json());\n\nconst UkraineLayer: React.FC = () => {\n  const { data } = useSWR<GeoJSON.FeatureCollection>(\n    UKRAINE_URL,\n    fetcher,\n    {\n      revalidateOnFocus: false,\n      revalidateOnReconnect: false,\n      refreshWhenHidden: false,\n      refreshWhenOffline: false,\n    },\n  );\n\n  return (\n    data && (\n      <GeoJSON\n        data={data}\n        style={{\n          color: \"gray\",\n          weight: 4,\n          fillColor: \"transparent\",\n          opacity: 0.4,\n          interactive: false,\n        }}\n      />\n    )\n  );\n};\n\nexport default UkraineLayer;\n","import \"leaflet-geosearch/assets/css/leaflet.css\";\n\nimport React from \"react\";\nimport {\n  MapContainer,\n  MapContainerProps,\n  TileLayer,\n  TileLayerProps,\n} from \"react-leaflet\";\n\nimport LocationMarker from \"./LocationMarker\";\nimport MapLocationSearch from \"./MapLocationSearch\";\n\nimport HistoricalLayers from \"./HistoricalLayers\";\nimport UkraineLayer from \"./UkraineLayer\";\n\nexport interface GeoDuckMapProps extends MapContainerProps {\n  position: [number, number];\n  onPositionChange: (pos: [number, number]) => void;\n  tileLayerProps?: TileLayerProps;\n  year?: number;\n  onYearChange?: (year: number) => void;\n  radius?: number;\n  onRadiusChange?: (radius: number) => void;\n  hideLayers?: Partial<{\n    yearInput: boolean;\n    searchInput: boolean;\n    locationMarker: boolean;\n    historicalLayers: boolean;\n    ukraineLayer: boolean;\n  }>;\n}\n\nconst GeoDuckMap: React.FC<GeoDuckMapProps> = ({\n  position,\n  onPositionChange,\n  tileLayerProps,\n  year = 1897,\n  onYearChange,\n  radius,\n  onRadiusChange,\n  hideLayers,\n  ...mapContainerProps\n}) => (\n  <MapContainer\n    scrollWheelZoom\n    worldCopyJump\n    center={[49.0139, 31.2858]}\n    style={{ height: \"100%\", width: \"100%\" }}\n    zoom={6}\n    zoomControl={false}\n    {...mapContainerProps}\n  >\n    <TileLayer\n      className=\"grayscale\"\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      url={\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"}\n      {...tileLayerProps}\n    />\n    {!hideLayers?.ukraineLayer && <UkraineLayer />}\n    {!hideLayers?.searchInput && <MapLocationSearch />}\n    {!hideLayers?.historicalLayers && (\n      <HistoricalLayers year={year} onYearChange={onYearChange} />\n    )}\n    {!hideLayers?.locationMarker && (\n      <LocationMarker\n        value={position}\n        onChange={onPositionChange}\n        radius={radius}\n        onRadiusChange={onRadiusChange}\n      />\n    )}\n  </MapContainer>\n);\n\nexport default GeoDuckMap;\n"],"names":["markerSVG","LocationMarker","value","onChange","radius","onRadiusChange","map","useMap","useMapEvents","e","lat","lng","useEffect","handleWheel","delta","step","minRadius","maxRadius","newRadius","handleKeyDown","handleKeyUp","mapContainer","markerIcon","React","L","jsxs","Fragment","jsx","Marker","Circle","useStopPropagation","elementRef","useRef","DomEvent","SearchSVG","PinSVG","MapLocationSearch","memo","query","setQuery","useState","results","setResults","autocompleteRef","provider","OpenStreetMapProvider","searchLocations","useCallback","searchQuery","searchResults","timer","handleLocationSelect","result","handleInputChange","handleSelect","key","Autocomplete","AutocompleteItem","BASE_URL","countryCollections","stateCollections","getClosestCollectionUrl","targetYear","collections","isStrict","exactMatch","year","countryYears","a","b","fetcher","url","res","useMapData","defaultYear","setYear","countriesUrl","countriesData","isLoadingCountries","isValidatingCountries","useSWR","statesUrl","statesData","isLoadingStates","isValidatingStates","countries","useMemo","states","MapTooltip","level1","level2","level3","Card","CardBody","YEAR_PRESETS","validateYear","yearStr","yearNum","YearSelect","yearInput","setYearInput","showPresets","setShowPresets","isInvalid","setIsInvalid","yearSelectRef","handleYearInputChange","numericValue","isValid","handlePresetSelect","presetYear","handleInputFocus","handleInputBlur","Input","preset","Button","colorPalette","getCountryFeatureColor","feature","id","_a","colorIndex","getStyle","isHighlight","weight","countryColor","CountriesLayer","forwardRef","data","onEachFeature","ref","GeoJSON","StatesLayer","HistoricalLayers","onYearChange","hoveredCountryFeature","setHoveredCountryFeature","hoveredStateFeature","setHoveredStateFeature","updateYear","isLoading","onEachCountryFeature","layer","onEachStateFeature","countryFeature","f","_b","Spinner","_c","UKRAINE_URL","UkraineLayer","GeoDuckMap","position","onPositionChange","tileLayerProps","hideLayers","mapContainerProps","MapContainer","TileLayer"],"mappings":"qTAIMA,EAAY,ydASZC,EAAgD,CAAC,CACrD,MAAAC,EACA,SAAAC,EACA,OAAAC,EACA,eAAAC,CACF,IAAM,CACJ,MAAMC,EAAMC,EAAAA,OAAA,EAEZC,eAAa,CACX,MAAMC,EAAG,CACP,GAAI,CAACA,EAAE,OAAQ,OACf,KAAM,CAAE,IAAAC,EAAK,IAAAC,CAAA,EAAQF,EAAE,OAEvBN,EAAS,CAACO,EAAKC,CAAG,CAAC,CACrB,CAAA,CACD,EAEDC,EAAAA,UAAU,IAAM,CACd,GAAI,CAACP,GAAkBD,IAAW,OAAW,OAE7C,MAAMS,EAAeJ,GAAkB,CACrC,GAAIA,EAAE,QAAS,CAEbA,EAAE,eAAA,EACFA,EAAE,gBAAA,EACFA,EAAE,yBAAA,EAEF,MAAMK,EAAQL,EAAE,OACVM,EAAO,IACPC,EAAY,IACZC,EAAY,IAElB,IAAIC,EAAYd,EACZU,EAAQ,EAEVI,EAAY,KAAK,IAAId,EAASW,EAAME,CAAS,EAG7CC,EAAY,KAAK,IAAId,EAASW,EAAMC,CAAS,EAG3CE,IAAcd,GAChBC,EAAea,CAAS,CAE5B,CACF,EAEMC,EAAiBV,GAAqB,CACtCA,EAAE,MAAQ,WAEZH,EAAI,gBAAgB,QAAA,CAExB,EAEMc,EAAeX,GAAqB,CACpCA,EAAE,MAAQ,WAEZH,EAAI,gBAAgB,OAAA,CAExB,EAEMe,EAAef,EAAI,aAAA,EAGzB,OAAAe,EAAa,iBAAiB,QAASR,EAAa,CAAE,QAAS,GAAO,QAAS,GAAM,EACrF,SAAS,iBAAiB,UAAWM,CAAa,EAClD,SAAS,iBAAiB,QAASC,CAAW,EAEvC,IAAM,CACXC,EAAa,oBAAoB,QAASR,EAAa,CAAE,QAAS,GAAM,EACxE,SAAS,oBAAoB,UAAWM,CAAa,EACrD,SAAS,oBAAoB,QAASC,CAAW,EAEjDd,EAAI,gBAAgB,OAAA,CACtB,CACF,EAAG,CAACA,EAAKF,EAAQC,CAAc,CAAC,EAEhC,MAAMiB,EAAaC,EAAM,QAAQ,IACxBC,EAAE,QAAQ,CACf,KAAMxB,EACN,UAAW,WACX,SAAU,CAAC,GAAI,EAAE,EACjB,WAAY,CAAC,GAAI,EAAE,EACnB,YAAa,CAAC,EAAG,GAAG,CAAA,CACrB,EACA,CAAA,CAAE,EAEL,OAAKE,EAGHuB,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAC,EAAAA,IAACC,EAAAA,OAAA,CAAO,SAAU1B,EAAO,KAAMoB,EAAY,EAC1ClB,GAAUA,EAAS,GAClBuB,EAAAA,IAACE,EAAAA,OAAA,CACC,OAAQ3B,EACR,OAAAE,EACA,YAAa,CACX,MAAO,eACP,UAAW,eACX,YAAa,GACb,OAAQ,CAAA,CACV,CAAA,CACF,EAEJ,EAjBiB,IAmBrB,ECpHM0B,EAAqB,IAAM,CAC/B,MAAMC,EAAaC,EAAAA,OAAuB,IAAI,EAE9CpB,OAAAA,EAAAA,UAAU,IAAM,CACTmB,EAAW,SAChBE,WAAS,wBAAwBF,EAAW,OAAO,CACrD,EAAG,CAACA,EAAW,OAAO,CAAC,EAEhBA,CACT,ECLMG,EAAY,IAChBP,EAAAA,IAAC,MAAA,CACC,UAAU,wBACV,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAAA,EAAAA,IAAC,OAAA,CACC,EAAE,8CACF,cAAc,QACd,eAAe,QACf,YAAa,CAAA,CAAA,CACf,CACF,EAGIQ,EAAS,IACbV,EAAAA,KAAC,MAAA,CACC,UAAU,sCACV,KAAK,OACL,OAAO,eACP,QAAQ,YAER,SAAA,CAAAE,EAAAA,IAAC,OAAA,CACC,EAAE,qFACF,cAAc,QACd,eAAe,QACf,YAAa,CAAA,CAAA,EAEfA,EAAAA,IAAC,OAAA,CACC,EAAE,mCACF,cAAc,QACd,eAAe,QACf,YAAa,CAAA,CAAA,CACf,CAAA,CACF,EAWIS,EAAoBC,EAAAA,KAAK,IAAM,CACnC,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAS,EAAE,EAC/B,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAyB,CAAA,CAAE,EACnDG,EAAkBb,EAAA,EAClBxB,EAAMC,EAAAA,OAAA,EAENqC,EAAW,IAAIC,wBAAsB,CACzC,OAAQ,CACN,kBAAmB,KACnB,aAAc,uBACd,MAAO,EACP,MAAO,uBAAA,CACT,CACD,EAEKC,EAAkBC,EAAAA,YACtB,MAAOC,GAAwB,CAC7B,GAAI,CAACA,EAAY,OAAQ,CACvBN,EAAW,CAAA,CAAE,EAEb,MACF,CAEA,GAAI,CACF,MAAMO,EAAgB,MAAML,EAAS,OAAO,CAAE,MAAOI,EAAa,EAElEN,EAAWO,CAA+B,CAC5C,MAAQ,CACNP,EAAW,CAAA,CAAE,CACf,CACF,EACA,CAACE,CAAQ,CAAA,EAIXhC,EAAAA,UAAU,IAAM,CACd,MAAMsC,EAAQ,WAAW,IAAM,CAC7BJ,EAAgBR,CAAK,CACvB,EAAG,GAAG,EAEN,MAAO,IAAM,aAAaY,CAAK,CACjC,EAAG,CAACZ,CAAK,CAAC,EAEV,MAAMa,EAAwBC,GAAyB,CACrDb,EAASa,EAAO,KAAK,EAGrB9C,EAAI,QAAQ,CAAC8C,EAAO,EAAGA,EAAO,CAAC,EAAG,EAAE,EAGpC9C,EAAI,KAAK,yBAA0B,CACjC,SAAU8C,EACV,OAAQ,IAAA,CACT,CACH,EAEMC,EAAqBnD,GAAkB,CAC3CqC,EAASrC,CAAK,CAChB,EAEMoD,EAAgBC,GAAgC,CACpD,GAAIA,EAAK,CACP,MAAMH,EAASX,EAAQc,CAAa,EAEhCH,GACFD,EAAqBC,CAAM,CAE/B,CACF,EAEA,OACEzB,EAAAA,IAAC,MAAA,CACC,IAAKgB,EACL,UAAU,oCAEV,SAAAhB,EAAAA,IAAC6B,EAAAA,aAAA,CACC,aAAW,2BACX,UAAU,kEACV,aAAcf,EACd,WAAYH,EACZ,aAAc,CACZ,aAAc,0CAAA,EAEhB,YAAY,2BACZ,mBAAeJ,EAAA,EAAU,EACzB,QAAQ,WACR,QAAUzB,GAAMA,EAAE,gBAAA,EAClB,cAAe4C,EACf,YAAc5C,GAAMA,EAAE,gBAAA,EACtB,kBAAmB6C,EAElB,SAACF,GACAzB,EAAAA,IAAC8B,EAAAA,iBAAA,CAEC,mBAAetB,EAAA,EAAO,EACtB,UAAWiB,EAAO,MAEjB,SAAAA,EAAO,KAAA,EAJHX,EAAQ,QAAQW,CAAM,CAAA,CAK7B,CAAA,CAEJ,CAAA,CAGN,CAAC,EAEDhB,EAAkB,YAAc,oBC3JhC,MAAMsB,EACJ,4EAMWC,EAAmC,CAC9C,CAAE,KAAM,KAAM,IAAK,GAAGD,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,yBAAA,CAChC,EAEaE,EAAiC,CAC5C,CAAE,KAAM,KAAM,IAAK,GAAGF,CAAQ,sBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,sBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,sBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,sBAAA,EAC9B,CAAE,KAAM,KAAM,IAAK,GAAGA,CAAQ,sBAAA,CAChC,EAEMG,EAA0B,CAC9BC,EACAC,EACAC,EAAoB,KACF,CAClB,GAAIA,EAAU,CACZ,MAAMC,EAAaF,EAAY,KAAK,CAAC,CAAE,KAAAG,CAAA,IAAWA,IAASJ,CAAU,EACrE,OAAOG,EAAaA,EAAW,IAAM,IACvC,CACA,MAAME,EAAeJ,EAClB,OAAO,CAAC,CAAE,KAAAG,CAAA,IAAWA,EAAO,GAAKA,GAAQJ,CAAU,EACnD,KAAK,CAACM,EAAGC,IAAMA,EAAE,KAAOD,EAAE,IAAI,EAEjC,OAAOD,EAAa,OAAS,EAAIA,EAAa,CAAC,EAAE,IAAM,IACzD,EAGMG,EAAWC,GAAgB,MAAMA,CAAG,EAAE,KAAMC,GAAQA,EAAI,MAAM,EAS9DC,EAAcC,GAAiC,CACnD,KAAM,CAACR,EAAMS,CAAO,EAAInC,EAAAA,SAASkC,CAAW,EAEtCE,EAAef,EAAwBK,EAAMP,CAAkB,EAC/D,CACJ,KAAMkB,EACN,UAAWC,EACX,aAAcC,CAAA,EACZC,EAAkCJ,EAAcN,EAAS,CAC3D,kBAAmB,GACnB,sBAAuB,GACvB,kBAAmB,GACnB,mBAAoB,EAAA,CACrB,EAEKW,EAAYpB,EAAwBK,EAAMN,EAAkB,EAAI,EAChE,CACJ,KAAMsB,EACN,UAAWC,EACX,aAAcC,CAAA,EACZJ,EAAkCC,EAAWX,EAAS,CACxD,kBAAmB,GACnB,sBAAuB,GACvB,kBAAmB,GACnB,mBAAoB,EAAA,CACrB,EAEKe,EAAYC,EAAAA,QAChB,IAAOT,GAAiB,KACxB,CAACA,CAAa,CAAA,EAGVU,EAASD,EAAAA,QACb,IAAOJ,GAAc,KACrB,CAACA,CAAU,CAAA,EAOb,MAAO,CACL,UAAAG,EACA,OAAAE,EACA,WAPkBrB,GAAiB,CACnCS,EAAQT,CAAI,CACd,EAME,UACEY,GACAK,GACAJ,GACAK,CAAA,CAEN,EC3GMI,EAAwC,CAAC,CAAE,OAAAC,EAAQ,OAAAC,EAAQ,OAAAC,KAE7DhE,MAAC,MAAA,CAAI,UAAU,uCACb,eAACiE,EAAAA,KAAA,CAAK,UAAU,0DACd,SAAAjE,EAAAA,IAACkE,YAAS,UAAU,OAClB,SAAApE,OAAC,MAAA,CAAI,UAAU,sBACZ,SAAA,CAAAkE,GAAUhE,EAAAA,IAAC,IAAA,CAAE,UAAU,aAAc,SAAAgE,EAAO,EAC5CD,GAAU/D,EAAAA,IAAC,IAAA,CAAE,UAAU,8BAA+B,SAAA+D,EAAO,EAC7DD,GAAU9D,EAAAA,IAAC,IAAA,CAAE,UAAU,8BAA+B,SAAA8D,CAAA,CAAO,CAAA,EAChE,CAAA,CACF,EACF,EACF,ECfEK,EAAe,CACnB,CAAE,MAAO,KAAM,MAAO,mBAAA,EACtB,CAAE,MAAO,KAAM,MAAO,KAAA,EACtB,CAAE,MAAO,KAAM,MAAO,YAAA,EACtB,CAAE,MAAO,KAAM,MAAO,YAAA,EACtB,CAAE,MAAO,KAAM,MAAO,cAAA,CACxB,EAEMC,EAAgBC,GAA6B,CACjD,MAAMC,EAAU,SAASD,EAAS,EAAE,EAEpC,MAAO,UAAU,KAAKA,CAAO,GAAKC,GAAW,MAAQA,GAAW,IAClE,EAOMC,EACJ,CAAC,CAAE,MAAAhG,EAAO,SAAAC,KAAe,CACvB,KAAM,CAACgG,EAAWC,CAAY,EAAI5D,EAAAA,SAAStC,EAAM,UAAU,EACrD,CAACmG,EAAaC,CAAc,EAAI9D,EAAAA,SAAS,EAAK,EAC9C,CAAC+D,EAAWC,CAAY,EAAIhE,EAAAA,SAAS,EAAK,EAC1CiE,EAAgB3E,EAAA,EAEhB4E,EAAyBxG,GAAkB,CAE/C,MAAMyG,EAAezG,EAAM,QAAQ,MAAO,EAAE,EAAE,MAAM,EAAG,CAAC,EAIxD,GAFAkG,EAAaO,CAAY,EAErBA,EAAa,SAAW,EAAG,CAC7B,MAAMC,EAAUb,EAAaY,CAAY,EAEzCH,EAAa,CAACI,CAAO,EAEjBA,GACFzG,EAAS,SAASwG,EAAc,EAAE,CAAC,CAEvC,MACEH,EAAa,EAAK,CAEtB,EAEMK,EAAsBC,GAAuB,CACjDV,EAAaU,EAAW,UAAU,EAClC3G,EAAS2G,CAAU,EACnBR,EAAe,EAAK,EACpBE,EAAa,EAAK,CACpB,EAEMO,EAAmB,IAAM,CAC7BT,EAAe,EAAI,CACrB,EAEMU,EAAkB,IAAM,CAE5B,WAAW,IAAMV,EAAe,EAAK,EAAG,GAAG,CAC7C,EAEA,OACE3E,EAAAA,IAAC,OAAI,IAAK8E,EAAe,UAAU,qCACjC,SAAAhF,EAAAA,KAAC,MAAA,CAAI,UAAU,6CACb,SAAA,CAAAE,EAAAA,IAACsF,EAAAA,MAAA,CACC,WAAY,CACV,aAAc,0BACd,MAAO,uBAAA,EAET,aAAcV,EAAY,+BAAiC,GAC3D,UAAAA,EACA,YAAY,OACZ,KAAK,OACL,MAAOJ,EACP,QAAQ,WACR,OAAQa,EACR,QAASD,EACT,cAAeL,CAAA,CAAA,EAGhBL,SACE,MAAA,CAAI,UAAU,0BACZ,SAAAP,EAAa,IAAKoB,GACjBzF,EAAAA,KAAC0F,EAAAA,OAAA,CAEC,UAAU,wBACV,MAAM,UACN,KAAK,KACL,QAASjH,IAAUgH,EAAO,MAAQ,OAAS,WAC3C,QAAS,IAAML,EAAmBK,EAAO,KAAK,EAE7C,SAAA,CAAAA,EAAO,MAAM,MAAIA,EAAO,KAAA,CAAA,EAPpBA,EAAO,KAAA,CASf,CAAA,CACH,CAAA,CAAA,CAEJ,CAAA,CACF,CAEJ,ECzFIE,EAAe,CACnB,QACA,WACA,SACA,SACA,OACA,MACA,QACF,EAEMC,EAA0BC,GAAqB,OACnD,MAAMC,IAAMC,EAAAF,EAAQ,aAAR,YAAAE,EAAoB,mBAAoBF,EAAQ,IAAM,EAClE,GAAIC,IAAO,GAET,MAAO,OAET,MAAME,EAAaF,EAAKH,EAAa,OACrC,OAAOA,EAAaK,CAAU,CAChC,EAEMC,EAAW,CAACJ,EAA8BK,EAAsBC,EAAS,IAAM,CACnF,MAAMC,EAAeP,EAAUD,EAAuBC,CAAO,EAAI,OACjE,MAAO,CACL,MAAOO,EACP,UAAWA,EACX,OAAAD,EACA,QAASD,EAAc,EAAI,GAC3B,YAAaA,EAAc,GAAM,EACjC,YAAa,EAAA,CAEjB,EAEMG,EAAiBzF,EAAAA,KACrB0F,EAAAA,WAAoC,CAAC,CAAE,KAAAC,EAAM,cAAAC,CAAA,EAAiBC,IAC5DF,EACErG,EAAAA,IAACwG,EAAAA,QAAA,CACC,IAAAD,EACA,KAAAF,EACA,MAAQV,GAAYI,EAASJ,EAAS,GAAO,CAAC,EAC9C,cAAAW,CAAA,CAAA,EAEA,IAAA,CAER,EAEAH,EAAe,YAAc,iBAE7B,MAAMM,EAAc/F,EAAAA,KAAK,CAAC,CAAE,KAAA2F,EAAM,cAAAC,CAAA,IAChCD,EACErG,EAAAA,IAACwG,EAAAA,QAAA,CACC,KAAAH,EACA,MAAQV,GAAYI,EAASJ,EAAS,GAAO,CAAC,EAC9C,cAAAW,CAAA,CAAA,EAEA,IACN,EAEAG,EAAY,YAAc,cAO1B,MAAMC,GAAoD,CAAC,CAAE,KAAAnE,EAAM,aAAAoE,KAAmB,WACpF,KAAM,CAACC,EAAuBC,CAAwB,EAAIhG,EAAAA,SAAc,IAAI,EACtE,CAACiG,EAAqBC,CAAsB,EAAIlG,EAAAA,SAAc,IAAI,EAClE,CAAE,UAAA6C,EAAW,OAAAE,EAAQ,WAAAoD,EAAY,UAAAC,CAAA,EAAcnE,EAAWP,CAAI,EAEpEtD,EAAAA,UAAU,IAAM,CACd+H,EAAWzE,CAAI,EACfsE,EAAyB,IAAI,EAC7BE,EAAuB,IAAI,CAC7B,EAAG,CAACxE,CAAI,CAAC,EAET,MAAM2E,EAAuB9F,EAAAA,YAC3B,CAACuE,EAA0BwB,IAAiB,CAC1CA,EAAM,GAAG,CACP,UAAYrI,GAAM,CAChB+H,EAAyBlB,CAAO,EAChC7G,EAAE,OAAO,SAASiH,EAASJ,EAAS,GAAO,CAAC,CAAC,CAC/C,EACA,SAAW7G,GAAM,CACf+H,EAAyB,IAAI,EAC7B/H,EAAE,OAAO,SAASiH,EAASJ,EAAS,GAAO,CAAC,CAAC,CAC/C,CAAA,CACD,CACH,EACA,CAAA,CAAC,EAGGyB,EAAqBhG,EAAAA,YACzB,CAACuE,EAA0BwB,IAAiB,CAC1CA,EAAM,GAAG,CACP,UAAYrI,GAAM,CAChBiI,EAAuBpB,CAAO,EAC9B,MAAM0B,EAAiB3D,GAAA,YAAAA,EAAW,SAAS,KACxC4D,YAAM,QAAAzB,EAAAyB,EAAE,KAAF,YAAAzB,EAAM,gBAAe0B,EAAA5B,EAAQ,aAAR,YAAA4B,EAAoB,iBAAiB,cAE/DF,GACFR,EAAyBQ,CAAc,EAEzCvI,EAAE,OAAO,SAASiH,EAASJ,EAAS,GAAM,CAAC,CAAC,CAC9C,EACA,SAAW7G,GAAM,CACfiI,EAAuB,IAAI,EAC3BjI,EAAE,OAAO,SAASiH,EAASJ,EAAS,GAAO,CAAC,CAAC,CAC/C,CAAA,CACD,CACH,EACA,CAACjC,CAAS,CAAA,EAGZ,OACE5D,EAAAA,KAAAC,WAAA,CACG,SAAA,CAAAkH,EACCjH,EAAAA,IAAC,OAAI,UAAU,6GACb,eAACwH,EAAAA,QAAA,CAAA,CAAQ,CAAA,CACX,EAEA1H,EAAAA,KAAAC,EAAAA,SAAA,CACG,SAAA,CAAA2D,GACC1D,EAAAA,IAACmG,EAAA,CACC,KAAMzC,EACN,cAAewD,CAAA,CAAA,EAIlBtD,GACC5D,EAAAA,IAACyG,EAAA,CAAY,KAAM7C,EAAQ,cAAewD,CAAA,CAAoB,CAAA,EAElE,EAGAT,GACE3G,EAAAA,IAACuE,EAAA,CACC,MAAOhC,EACP,SAAUoE,CAAA,CAAA,GAKdC,GAAyBE,IACzB9G,EAAAA,IAAC6D,EAAA,CACC,QAAQgC,EAAAe,GAAA,YAAAA,EAAuB,aAAvB,YAAAf,EAAmC,cAC3C,QAAQ0B,EAAAT,GAAA,YAAAA,EAAqB,aAArB,YAAAS,EAAiC,cACzC,QAAQE,EAAAX,GAAA,YAAAA,EAAqB,aAArB,YAAAW,EAAiC,aAAA,CAAA,CAC3C,EAEJ,CAEJ,ECpKMC,GACJ,4FACI/E,GAAWC,GAAgB,MAAMA,CAAG,EAAE,KAAMC,GAAQA,EAAI,MAAM,EAE9D8E,GAAyB,IAAM,CACnC,KAAM,CAAE,KAAAtB,GAAShD,EACfqE,GACA/E,GACA,CACE,kBAAmB,GACnB,sBAAuB,GACvB,kBAAmB,GACnB,mBAAoB,EAAA,CACtB,EAGF,OACE0D,GACErG,EAAAA,IAACwG,EAAAA,QAAA,CACC,KAAAH,EACA,MAAO,CACL,MAAO,OACP,OAAQ,EACR,UAAW,cACX,QAAS,GACT,YAAa,EAAA,CACf,CAAA,CAIR,ECAMuB,GAAwC,CAAC,CAC7C,SAAAC,EACA,iBAAAC,EACA,eAAAC,EACA,KAAAxF,EAAO,KACP,aAAAoE,EACA,OAAAlI,EACA,eAAAC,EACA,WAAAsJ,EACA,GAAGC,CACL,IACEnI,EAAAA,KAACoI,EAAAA,aAAA,CACC,gBAAe,GACf,cAAa,GACb,OAAQ,CAAC,QAAS,OAAO,EACzB,MAAO,CAAE,OAAQ,OAAQ,MAAO,MAAA,EAChC,KAAM,EACN,YAAa,GACZ,GAAGD,EAEJ,SAAA,CAAAjI,EAAAA,IAACmI,EAAAA,UAAA,CACC,UAAU,YACV,YAAY,qFACZ,IAAK,iDACJ,GAAGJ,CAAA,CAAA,EAEL,EAACC,GAAA,MAAAA,EAAY,eAAgBhI,MAAC2H,GAAA,CAAA,CAAa,EAC3C,EAACK,GAAA,MAAAA,EAAY,cAAehI,MAACS,EAAA,CAAA,CAAkB,EAC/C,EAACuH,GAAA,MAAAA,EAAY,mBACZhI,EAAAA,IAAC0G,GAAA,CAAiB,KAAAnE,EAAY,aAAAoE,EAA4B,EAE3D,EAACqB,GAAA,MAAAA,EAAY,iBACZhI,EAAAA,IAAC1B,EAAA,CACC,MAAOuJ,EACP,SAAUC,EACV,OAAArJ,EACA,eAAAC,CAAA,CAAA,CACF,CAAA,CAEJ"}